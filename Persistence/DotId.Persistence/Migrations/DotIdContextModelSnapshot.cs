// <auto-generated />
using System;
using DotId.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotId.Persistence.Migrations
{
    [DbContext(typeof(DotIdContext))]
    partial class DotIdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotId.Domain.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.HasIndex("StateId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DotId.Domain.Entities.Score", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdvantageDisadvantageScore")
                        .HasColumnType("int");

                    b.Property<int?>("DisadvantageScore")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ScoreId");

                    b.HasIndex("LocationId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("DotId.Domain.Entities.ScoreDetail", b =>
                {
                    b.Property<int>("ScoreDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdvantageDisadvantageDecile")
                        .HasColumnType("int");

                    b.Property<int?>("DisadvantageDecile")
                        .HasColumnType("int");

                    b.Property<int?>("IndexOfEconomicResourcesDecile")
                        .HasColumnType("int");

                    b.Property<int?>("IndexOfEconomicResourcesScore")
                        .HasColumnType("int");

                    b.Property<int?>("IndexOfEducationAndOccupationDecile")
                        .HasColumnType("int");

                    b.Property<int?>("IndexOfEducationAndOccupationScore")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("UsualResedantPopulation")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ScoreDetailsId");

                    b.HasIndex("ScoreId");

                    b.ToTable("ScoreDetails");
                });

            modelBuilder.Entity("DotId.Domain.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Median")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("DotId.Domain.Entities.Location", b =>
                {
                    b.HasOne("DotId.Domain.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("DotId.Domain.Entities.Score", b =>
                {
                    b.HasOne("DotId.Domain.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("DotId.Domain.Entities.ScoreDetail", b =>
                {
                    b.HasOne("DotId.Domain.Entities.Score", "Score")
                        .WithMany()
                        .HasForeignKey("ScoreId");
                });
#pragma warning restore 612, 618
        }
    }
}
